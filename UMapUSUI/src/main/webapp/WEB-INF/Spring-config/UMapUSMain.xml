<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.0.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	
	<!--  Import controller service into main servlet -->
<!--  	 <import resource="classpath*:/applicationcontext-umapuscontroller.xml" />  -->
	
	
	<context:annotation-config />
	<context:component-scan base-package="com.umapus.web.controllers" />
    <context:component-scan base-package="com.umapus.controller.component" />
<!--  	<context:component-scan base-package=" com.umapus.common.domain.entity" /> -->

	<mvc:default-servlet-handler />
	<mvc:annotation-driven />

    <mvc:interceptors>
        <bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
                <property name="cacheSeconds" value="0"/>
                <property name="useExpiresHeader" value="false"/>
                <property name="useCacheControlHeader" value="true"/>
                <property name="useCacheControlNoStore" value="true"/>
            </bean>     
   </mvc:interceptors>

	<!-- Enable annotation-based controllers using @Controller annotations -->
	<bean id="annotationUrlMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="order" value="0" />

	</bean>

	<bean id="controllerClassNameHandlerMapping"
		class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
		<property name="order" value="1" />
	</bean>

	<bean id="annotationMethodHandlerAdapter"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- All views are JSPs loaded from /WEB-INF/jsp -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/Views/" />
		<property name="suffix" value=".jsp" />
	</bean>

      <bean id="user" class="com.umapus.common.domain.entity.User" />
      <bean id="signUpRequest" class="com.umapus.common.domain.entity.SignUpRequest"/>	
	  <bean id="loginResponse" class="com.umapus.common.domain.entity.LoginResponse"/>
      
      <bean id="component" class="com.umapus.controller.component.UMapUsComponent"/>


   <!--  Email Settings --> <!-- As of now not working from Office will try at home -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
       <property name="host" value="smtp.gmail.com"/>
       <property name="port" value="465"/>
       <property name="username" value="umapusinc@gmail.com"/>
       <property name="password" value="EAIinFR@101"/>
       <property name="javaMailProperties">
           <props>
               <prop key="mail.smtp.auth">true</prop>
               <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
               <prop key="mail.smtp.socketFactory.port"></prop>
               <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>               
               <prop key="mail.smtp.starttls.enable">true</prop>
               <prop key="mail.debug">true</prop>
           </props>
       </property>    
   </bean>
   
   <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="support@umapus.com"/>
        <property name="subject" value="Sign up Confirmation !!!"/>
   </bean>
   
   <!-- <bean id="emailManager" class="com.umapus.external.mail.EmailManager"/> -->
   
   <bean id="umapusLoginUtilities" class="com.umapus.internal.utilities.UMapUSLoginUtilities"/>   
 <!--  End Email Settings -->

  <!--   <bean id="UMapUSComponent" class="com.umapus.controller.component.UMapUSComponent">
    </bean>
  -->

	<!--  <bean id="user" class="com.umapus.domain.entity.User" />



	<bean id="mapper" class="com.umapus.domain.util.UMapUsMapper" />

	<bean id="ldapDao" class="com.umapus.infrastructure.dao.LdapDaoImpl" />

	<bean id="sessionRepoDao" class="com.umapus.infrastructure.dao.SessionRepositoryDaoImpl" />

	<bean id="daoFactory" class="com.umapus.infrastructure.dao.DAOFactory">
		<property name="ldapDao" ref="ldapDao"></property>
		<property name="sessionRepoDao" ref="sessionRepoDao"></property>
	</bean>

	<bean id="loginRequest" class="com.umapus.domain.entity.LoginRequest" />

	<bean id="signUpRequest" class="com.umapus.domain.entity.SignUpRequest" />

	<bean id="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />

	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"
		p:use-pool="true" />

	<context:property-placeholder location="/WEB-INF/redis.properties" />

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="redisConnectionFactory" p:keySerializer-ref="stringRedisSerializer"
		p:hashKeySerializer-ref="stringRedisSerializer"
		p:hashValueSerializer-ref="stringRedisSerializer"
		p:valueSerializer-ref="stringRedisSerializer">
	</bean> -->
</beans>